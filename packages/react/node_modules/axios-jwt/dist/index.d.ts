declare type Token = string;
export interface IAuthTokens {
    accessToken: Token;
    refreshToken: Token;
}
export declare const isLoggedIn: () => boolean;
export declare const setAuthTokens: (tokens: IAuthTokens) => void;
export declare const setAccessToken: (token: string) => void;
export declare const clearAuthTokens: () => void;
export declare const getRefreshToken: () => string | undefined;
export declare const getAccessToken: () => string | undefined;
export declare type TokenRefreshRequest = (refreshToken: string) => Promise<Token>;
export interface IAuthTokenInterceptorConfig {
    header?: string;
    headerPrefix?: string;
    requestRefresh: TokenRefreshRequest;
}
export declare const refreshTokenIfNeeded: (requestRefresh: TokenRefreshRequest) => Promise<string | undefined>;
export declare const useAuthTokenInterceptor: (axios: any, config: IAuthTokenInterceptorConfig) => void;
export {};
//# sourceMappingURL=index.d.ts.map